function fitness_ = compute(this, sizes, structure, genes, active, inputs, functions, run, generation)

    store = this.train_( ...
        sizes, ...
        structure, ...
        genes, ...
        active, ...
        inputs, ...
        functions ...
    );

    fitness = this.fitnessFunction_( ...
        store.tp.total, ...
        store.tn.total, ...
        store.fp.total, ...
        store.fn.total ...
    );

    fitness_ = fitness.get();

    if ~isfield(this.store_.tp, 'values') || this.store_.fitness <= fitness_
        this.store_ = store;
        this.store_.fitness = fitness_;

        classifier_ = struct( ...
            'sizes', sizes, ...
            'structure', structure, ...
            'pitch', this.config_.signal.pitch, ...
            'genes', genes, ...
            'active', active, ...
            'inputs', inputs, ...
            'functions', '', ...
            'run', run, ...
            'fitness', fitness_, ...
            'threshold', this.threshold_ ...
        );

        classifier_.functions = functions;

        save([this.config_.runs_directory, '/', num2str(run), '.mat'], 'classifier_');
    end
end
